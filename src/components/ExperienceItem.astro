---
interface Props {
  title: string
  description: string[]
  link?: string
  date: string
  skills:string[]
  site:string
  company:string
}
const { title, description, link, date, skills, site,company } = Astro.props;
---

<div
  class="absolute w-3 h-3 rounded-full mt-1.5 -start-1.5 border border-gray-900 bg-gray-700"
>
</div>
<time
  class="mb-1 text-sm font-normal leading-none text-sky-400"
  >{date}</time
>
<h3 class="text-lg font-semibold text-yellow-200 mt-2">
  {title}
</h3>
<div >&nbsp;<small class="underline">{company}</small></div>
<p class="mb-4 text-base font-normal text-pretty">
    {description.map((desc: string, index: number) => (
      <span>&#x2022; {desc} <br/> <br/></span>
    ))}
  </p>
  
  
{
  link && (
    <a
      href={link}
      class="bg-white/5 
    border 
    rounded-full
    inline-flex justify-center items-center gap-x-2
    py-1 px-2 md:py-2 md:px-4
    text-xs md:text-base
    transition
    hover:scale-110 hover:bg-white/10"
    >
      Saber m√°s...{" "}
      <svg
        class="w-3 h-3 ms-2 rtl:rotate-180"
        aria-hidden="true"
        xmlns="http://www.w3.org/2000/svg"
        fill="none"
        viewBox="0 0 14 10"
      >
        <path
          stroke="currentColor"
          stroke-linecap="round"
          stroke-linejoin="round"
          stroke-width="2"
          d="M1 5h12m0 0L9 1m4 4L9 9"
        />
      </svg>
    </a>
  )
}
<p class="mb-4  font-normal text-pretty">
  {site}
</p>

<small class={`
    bg-white/10 
      border  border-gray-400 rounded-full
      flex justify-center items-center gap-x-2
      py-1 px-2 md:py-2 md:px-4
    `}>
    {skills.map((sk: string, index: number) => (
        <span> {sk} </span>
      ))}
    
    </small>